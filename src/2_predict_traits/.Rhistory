demo()
newbies!
library(tidyverse)
pt_coil_preds <- read_csv('../../results/microsp_pt_predictions.csv')
view(pt_coil_preds)
pt_coil_preds <- read_csv('../../results/microsp_pt_predictions.csv')
view(pt_coil_preds)
source("~/Desktop/microsporidia_nlp/src/1_format_data/3_misc_cleanup.R", echo=TRUE)
view(abstracts_traits)
abstracts_traits <- read_csv('../../data/abstracts_traits.csv')
view(abstracts_traits)
abstracts_traits <- read_csv('../../data/abstracts_traits.csv')''
abstracts_traits <- read_csv('../../data/abstracts_traits.csv')
view(abstracts_traits)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(pt_coil_preds)
view(filter(pt_coil_preds, str_detect(pt_coils_range, '2022')))
as.integer('09')
str_c(
as.integer(str_split(str_remove('2022-07-09', '2022-'), '-')[[1]]),
collapse = '-'
)
str_c(
as.integer(str_split(str_remove('2022-09-10', '2022-'), '-')[[1]]),
collapse = '-'
)
pt_coil_preds <- read_csv('../../results/microsp_pt_predictions.csv') %>%
mutate(pt_coils_range = ifelse(!is.na(pt_coils_range,
format_coil_range(pt_coils_range),
NA)))
format_coil_range <- Vectorize(function(pt_coils_range) {
# ---------------------------------------------------------------------------
# Turn ranges that Excel turned into dates, back into ranges
# ---------------------------------------------------------------------------
pt_coils_range <- str_c(
as.integer(str_split(str_remove(pt_coils_range, '2022-'), '-')[[1]]),
collapse = '-'
)
return(pt_coils_range)
})
pt_coil_preds <- read_csv('../../results/microsp_pt_predictions.csv') %>%
mutate(pt_coils_range = ifelse(!is.na(pt_coils_range,
format_coil_range(pt_coils_range),
NA)))
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
warnings()
pt_coil_preds <- read_csv('../../results/microsp_pt_predictions.csv') %>%
mutate(pt_coils_range = ifelse(!is.na(pt_coils_range) & str_detect(pt_coils_range, '2022-'),
format_coil_range(pt_coils_range),
NA))
warnigns
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
str_detect('2022-9-10', '2022-')
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
colnames(pt_coil_preds)
view(pt_coil_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(pt_coil_preds)
view(pt_coil_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(pt_coil_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(pt_coil_preds)
nrow(filter(pt_coil_preds, !is.na(pred_pt_coil)))
216 / 429
locality_preds <- read_csv('../../results/microsp_locality_predictions.csv')
view(locality_preds)
nrow(filter(locality_preds, !is.na(locality) & !is.na(pred_locality)))
nrow(filter(locality_preds, !is.na(locality)))
215 / 522
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
view(filter(locality_preds, is.na(locality)))
view(filter(locality_preds, !is.na(locality), is.na(pred_locality)))
str_remove('hello there', 'IJFDM')
x = 'hello; there (my); (friend) wassup'
str_split(x, '; ')[[1]]
str_remove(str_split(x, '; ')[[1]], ' ?\\(.+\\) ?')
format_locality <- Vectorize(function(locality) {
str_c(str_remove(str_split(locality, '; ')[[1]], ' ?\\(.+\\) ?'),
collapse = '; ')
})
format_locality(x)
format_locality <- Vectorize(function(locality) {
str_c(str_remove(str_split(locality, '; ')[[1]], ' ?\\(.+\\) ?'),
collapse = '; ')
})
locality_preds <- read_csv('../../results/microsp_locality_predictions.csv') %>%
mutate(locality_formatted = format_locality(locality),
true_pos = NA,
false_pos = NA,
false_neg = NA)
view(locality_prexs)
view(locality_preds)
view(locality_preds)
str_c(c(), collapse = ', ')
locality <- c('hello', 'there', 'friends')
pred_locality <- c('hello', 'friends')
pred_locality[which(pred_locality %in% locality)]
pred_locality <- c('hello', 'friends', 'mate')
pred_locality[which(pred_locality %in% locality)]
pred_locality[which(!(pred_locality %in% locality))]
locality[which(!locality %in% pred_locality)]
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
length(str_split('', ';')[[1]])
locality_preds[locality_preds == '']
locality_preds[locality_preds == ''] <- NA
view(locality_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
str_c(c(), collapse = '; ')
str_c(c(), collapse = '; ') == ''
pred_locality[which(pred_locality %in% locality)]
pred_locality <- c()
str_split('', '; ')[[1]]
pred_locality <- ';'
pred_locality <- ''
pred_locality[which(pred_locality %in% locality)]
length*(pred_locality[which(pred_locality %in% locality)])
length(pred_locality[which(pred_locality %in% locality)])
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
c(1, NA)
type(c(1, NA))
class(c(1, NA))
pos <- sapply(c(NA, 'Bulgaria'),
function(x) {ifelse(is.na(x), 0, length(str_split(x, '; ')[[1]]))})
pos
pos[1] / (pos[1] + pos[2])
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
x = c(0, 0)
identical(x, c(0, 0))
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
view(locality_preds)
get_precision(NA, NA)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
get_precision(NA, NA)
NaN + NaN
NaN + NaN / 9
NaN + 9
sum(locality_preds$recall)
sum(locality_preds$precision)
get_precision(NA, NA)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
true_pos <- NA
false_pos <- NA
pos <- sapply(c(true_pos, false_pos),
function(x) {ifelse(is.na(x), 0, length(str_split(x, '; ')[[1]]))})
POS
pos
identical(pos, c(0, 0))
get_precision <- function(true_pos, false_pos) {
pos <- sapply(c(true_pos, false_pos),
function(x) {ifelse(is.na(x), 0, length(str_split(x, '; ')[[1]]))})
if (identical(pos, c(0, 0))) {
return(0)
}
# precision = TP / (TP + FP)
return(pos[1] / (pos[1] + pos[2]))
}
get_precision(NA, NA)
get_precision('yeah; buddy', NA)
get_precision(NA, 'yeah; buddy')
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds)
true_pos = NA
false_pos = NA
pos <- sapply(c(true_pos, false_pos),
function(x) {ifelse(is.na(x), 0, length(str_split(x, '; ')[[1]]))})
po
pos
0 / (0 + 0)
source("~/Desktop/microsporidia_nlp/src/2_predict_traits/evaluate_extracted_traits.R", echo=TRUE)
view(locality_preds_)
view(locality_preds)
