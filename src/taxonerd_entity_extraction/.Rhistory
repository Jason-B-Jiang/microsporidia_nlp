abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
# -----------------------------------------------------------------------------
#
# Format microsporidia host data
#
# Jason Jiang - Created: 2022/05/09
#               Last edited: 2022/05/09
#
# Mideo Lab - Microsporidia text mining
#
# Add host data from Supplemental Table S1 from Murareanu et al. to manually
# extracted microsporidia abstract data (manually_collect_abstracts.xlsx,
# generated by src/organize_species_papers.R)
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(readxl)
################################################################################
abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
microsp_data <- read_csv('../../data/microsporidia_species.csv')
view(abstracts)
nrow(filter(abstracts, !is.na(abstract)))
594 / 634
# -----------------------------------------------------------------------------
#
# Format microsporidia host data
#
# Jason Jiang - Created: 2022/05/09
#               Last edited: 2022/05/09
#
# Mideo Lab - Microsporidia text mining
#
# Add host data from Supplemental Table S1 from Murareanu et al. to manually
# extracted microsporidia abstract data (manually_collect_abstracts.xlsx,
# generated by src/organize_species_papers.R)
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(readxl)
################################################################################
abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
microsp_data <- read_csv('../../data/microsporidia_species.csv')
nrow(filter(abstracts, is.na(first_paper_title)))
filter(abstracts, is.na(first_paper_title))
nrow(filter(abstracts, is.na(first_paper_title)))
# -----------------------------------------------------------------------------
#
# Format microsporidia host data
#
# Jason Jiang - Created: 2022/05/09
#               Last edited: 2022/05/09
#
# Mideo Lab - Microsporidia text mining
#
# Add host data from Supplemental Table S1 from Murareanu et al. to manually
# extracted microsporidia abstract data (manually_collect_abstracts.xlsx,
# generated by src/organize_species_papers.R)
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(readxl)
################################################################################
abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
microsp_data <- read_csv('../../data/microsporidia_species.csv')
nrow(filter(abstracts, is.na(first_paper_title)))
nrow(filter(abstracts, is.na(abstract)))
view(abstracts)
view(microsp_data)
setdiff(abstracts$species, microsp_data$`Species Name`)
# -----------------------------------------------------------------------------
#
# Format microsporidia host data
#
# Jason Jiang - Created: 2022/05/09
#               Last edited: 2022/05/09
#
# Mideo Lab - Microsporidia text mining
#
# Add host data from Supplemental Table S1 from Murareanu et al. to manually
# extracted microsporidia abstract data (manually_collect_abstracts.xlsx,
# generated by src/organize_species_papers.R)
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(readxl)
################################################################################
abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
microsp_data <- read_csv('../../data/microsporidia_species.csv')
setdiff(abstracts$species, microsp_data$`Species Name`)
view(abstract)
view(abstracts)
view(microsp_data)
view(filter(microsp_data, !is.na(`Experimental Host(s)`)))
test <- filter(microsp_data, `Species Name` %in% abstracts$species)
view(test)
identical(test$`Species Name`, abstracts$species)
test_1 <- arrange(abstracts, species)
identical(test$`Species Name`, test_1$species)
view(test)
?rename
test <- filter(microsp_data, `Species Name` %in% abstracts$species) %>%
rename(species = `Species Name`)
test <- filter(microsp_data, `Species Name` %in% abstracts$species) %>%
rename(species = `Species Name`, hosts = `Natural Host(s)`)
?inner_join
merge(x = abstracts, y = test, by = "species", all.x = TRUE)
test_merge = merge(x = abstracts, y = test, by = "species", all.x = TRUE)
view(test_merge)
test <- filter(microsp_data, `Species Name` %in% abstracts$species) %>%
rename(species = `Species Name`, hosts = `Natural Host(s)`) %>%
select(species, hosts)()
test <- filter(microsp_data, `Species Name` %in% abstracts$species) %>%
rename(species = `Species Name`, hosts = `Natural Host(s)`) %>%
select(species, hosts)
test_merge = merge(x = abstracts, y = test, by = "species", all.x = TRUE)
vew(test_merge)
view(test_merge)
# -----------------------------------------------------------------------------
#
# Format microsporidia host data
#
# Jason Jiang - Created: 2022/05/09
#               Last edited: 2022/05/09
#
# Mideo Lab - Microsporidia text mining
#
# Add host data from Supplemental Table S1 from Murareanu et al. to manually
# extracted microsporidia abstract data (manually_collect_abstracts.xlsx,
# generated by src/organize_species_papers.R)
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(readxl)
################################################################################
abstracts <- read_xlsx('../../data/manually_collect_abstracts.xlsx')
microsp_data <- read_csv('../../data/microsporidia_species.csv')
host_data <- microsp_data %>%
rename(species = `Species Name`, hosts = `Natural Host(s)`)
view(host_data)
host_data <- microsp_data %>%
rename(species = `Species Name`, hosts = `Natural Host(s)`) %>%
select(species, hosts)
view(host_data)
abstracts <- merge(x = abstracts, y = host_data, by = 'species', all.x = TRUE)
view(abstracts)
write_csv(abstracts, '../../data/abstracts_hosts_matched.csv')
source("~/Desktop/microsporidia_nlp/src/taxonerd_entity_extraction/format_host_data.R", echo=TRUE)
view(abstracts)
# -----------------------------------------------------------------------------
#
# Text
#
# Jason Jiang - Created: 2022/05/10
#               Last edited: 2022/05/10
#
# Mideo Lab - Microsporidia text mining
#
# Text
#
#
# -----------------------------------------------------------------------------
library(tidyverse)
library(glue)  # For formatting strings like in Python
################################################################################
################################################################################
## Extract polar tube coils
## Try extracting numeric data immediately before or after detecting polar tube
## coil term?
detect_coils <- Vectorize(function(abstract) {
# coil or turn appears as individual words in the abstract, suggesting polar
# tube coil/turn data
return(str_detect(abstract, ' *coil[s]? *') | str_detect(abstract, ' *turn[s]? *'))
})
microsp_data <- read_csv('../../data/abstracts_traits.csv') %>%
select(species, year_first_described, first_paper_title, abstract,
`Polar Tubule Coils Range`, `Polar Tubule Coils Average`) %>%
mutate(has_coil_data = detect_coils(abstract))
false_neg <-
filter(microsp_data, !is.na(`Polar Tubule Coils Range`) | !is.na(`Polar Tubule Coils Average`), !has_coil_data)
false_pos <-
filter(microsp_data, is.na(`Polar Tubule Coils Range`) & is.na(`Polar Tubule Coils Average`), has_coil_data)
view(microsp_data)
x <- 'coils and coins'
str_detect(x, '(coil[s]? | turn[s]?)')
x <- 'coil and coins'
str_detect(x, '(coil[s]? | turn[s]?)')
x <- 'turn and coins'
str_detect(x, '(coil[s]? | turn[s]?)')
str_detect(x, '(coil[s]?|turn[s]?)')
x <- 'turns and coins'
str_detect(x, '(coil[s]?|turn[s]?)')
x <- 'ashes to dust'
str_detect(x, '[to]?')
str_detect(x, '[to]?')
str_view(x, '[to]?')
str_view(x, '[to]?')
str_view(x, 'to')
str_view(x, '(to)?')
str_view(x, '(:to)?')
str_view(x, '(?:to)?')
str_view(x, 'ashes (?:to)?')
str_view(x, '(?:to)?')
str_view(x, 'to?')
str_view(x, 'to?')
str_view('ashes t dust', 'to?')
str_view('ashes to dust', 't?o?')
str_view('ashes to dust', '(to)?')
str_view('ashes to dust', '(to *)?')
str_view('ashes to dust', '( *to *)?')
str_view('ashes to dust', ' *(to)? *')
str_view('ashes to dust', '[to]')
str_view('ashes to dust', '[t][o]')
str_view('ashes to dust', '(to)')
str_view('ashes to dust', '(to)?')
str_view('ashes to dust', '(to)')
str_view('ashes to dust', '(to){0,1}')
str_view('ashes to dust', '(to|-)')
str_view('ashes to dust, dust - dust', '(to|-)')
str_view_all('ashes to dust, dust - dust', '(to|-)')
str_view_all('ashes to dust, dust - dust', '(to|\\W)')
str_view_all('ashes to dust, dust - dust', '(to|-)')
coil_data_regex <- '//d//s*(to|-)//d?'
str_view('there are 5 to 7 coils of the filament', coil_data_regex)
coil_data_regex <- '//d *(to|-)//d?'
str_view('there are 5 to 7 coils of the filament', coil_data_regex)
str_view('there are 5 to 7 coils of the filament', '\\d *(to|-) *\\d?')
str_view('there are 5 - 7 coils of the filament', '\\d *(to|-) *\\d?')
str_view('there are 5 coils of the filament', '\\d *(to|-) *\\d?')
str_view('there are 5 coils of the filament', '\\d *(to|-)? *\\d?')
str_view('there are 5 coils of the filament', '\\d *(to|-)? *\\d?')
str_view('there are 5 coils of the filament', '(coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?')
str_view('there are 5 coils of the filament', '(coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?.*(coil[s]?|turn[s]?)?')
detect_coils <- Vectorize(function(abstract) {
# coil or turn appears as individual words in the abstract, suggesting polar
# tube coil/turn data
return(str_detect(abstract, '( *coil[s]? *| *turn[s]? *)'))
})
microsp_data <- read_csv('../../data/abstracts_traits.csv') %>%
select(species, year_first_described, first_paper_title, abstract,
`Polar Tubule Coils Range`, `Polar Tubule Coils Average`) %>%
mutate(has_coil_data = detect_coils(abstract))
false_neg <-
filter(microsp_data, !is.na(`Polar Tubule Coils Range`) | !is.na(`Polar Tubule Coils Average`), !has_coil_data)
false_pos <-
filter(microsp_data, is.na(`Polar Tubule Coils Range`) & is.na(`Polar Tubule Coils Average`), has_coil_data)
microsp_data <- read_csv('../../data/abstracts_traits.csv') %>%
select(species, year_first_described, first_paper_title, abstract,
`Polar Tubule Coils Range`, `Polar Tubule Coils Average`) %>%
mutate(has_coil_data = detect_coils(abstract))
false_neg <-
filter(microsp_data, !is.na(`Polar Tubule Coils Range`) | !is.na(`Polar Tubule Coils Average`), !has_coil_data)
false_pos <-
filter(microsp_data, is.na(`Polar Tubule Coils Range`) & is.na(`Polar Tubule Coils Average`), has_coil_data)
str_view('there are 5 coils of the filament', '(:coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?.*(coil[s]?|turn[s]?)?')
str_view('there are 5 coils of the filament', '(?:coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?.*(coil[s]?|turn[s]?)?')
str_view('there are 5 coils of the filament', '(?:coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?.*(?:coil[s]?|turn[s]?)?')
str_view('there are 5 coils of the filament', '(?:coil[s]?|turn[s]?)? *\\d *(to|-)? *\\d?(?:.+)(?:coil[s]?|turn[s]?)?')
str_view('there are 5 coils of the filament',
'(?:(coil[s]?|turn[s]?).*?)\\d *(to|-) *\\d?')
coil_regex <- '(coil[s]?|turn[s]?)'
str_view('there are 5 coils of the filament',
coil_regex)
num_range_regex <- '\\d *(to|-) *\\d?'
str_view('there are 5 coils of the filament',
num_range_regex)
num_range_regex <- '\\d *(to|-)? *\\d?'
str_view('there are 5 coils of the filament',
num_range_regex)
num_range_regex <- '\\d *?(to|-)? *\\d?'
str_view('there are 5 coils of the filament',
num_range_regex)
num_range_regex <- '\\d *(to|-)? *\\d?'
str_view('there are 5 coils of the filament',
num_range_regex)
coil_regex
str_view('there are 5 coils of the filament',
glue('{coil_regex}.+?{num_range_regex}.+?{coil_regex}'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?.+?{num_range_regex}.+?{coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?.*?{num_range_regex}.*?{coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*?){num_range_regex}.*?{coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*?){num_range_regex}(?:.*?){coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*){num_range_regex}(?:.*?){coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*?){num_range_regex}(?:.*?){coil_regex}?'))
str_view('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*?){num_range_regex}(?:.*?){coil_regex}?'))
str_extract('there are 5 coils of the filament',
glue('{coil_regex}?(?:.*?){num_range_regex}(?:.*?){coil_regex}?'))
str_extract('there are 5 coils of the filament',
glue('(?:{coil_regex})?(?:.*?){num_range_regex}(?:.*?){coil_regex}?'))
str_extract('there are 5 coils of the filament',
glue('(?:{coil_regex})?(?:.*?){num_range_regex}(?:.*?)(?:{coil_regex})?'))
?str_match
str_match('there are 5 coils of the filament',
glue('(?:{coil_regex})?(?:.*?){num_range_regex}(?:.*?)(?:{coil_regex})?'))
str_view('there are 5 coils of the filament',
glue('(?:{coil_regex})?{num_range_regex}(?:{coil_regex})?'))
str_view('there are 5 coils of the filament',
glue('(?:{coil_regex})?{num_range_regex}(?:{coil_regex})?'))
str_view('filaments are coiled 5-7 times',
glue('(?:{coil_regex})?{num_range_regex}(?:{coil_regex})?'))
str_view('filaments are looped 5-7 times',
glue('(?:{coil_regex})?{num_range_regex}(?:{coil_regex})?'))
str_view('filaments are looped 5-7 times',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('filaments are coiled 5-7 times',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('filaments are arranged in coils, 5 - 7',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('filaments are arranged in coils, 5 to 7',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('filaments are turned, 5 to 7 times',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('5 - 7 x 4 - 5',
glue('((?:{coil_regex})?{num_range_regex}(?:{coil_regex})?|{num_range_regex}(?:{coil_regex})?)'))
str_view('polar tube in coils of 5 - 7',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_view('polar tube in turns of 5 - 7',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_view('polar tube in 5 to 7 turns',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_view('4 - 7 x 2 - 3',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_view('polar tube in 5 to 7 turns',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('((?:{coil_regex}.+?){num_range_regex}|{num_range_regex}(?:.+?{coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('({num_range_regex}(?=.+?{coil_regex})|{num_range_regex}(?<=.+?{coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('({num_range_regex}(?={coil_regex})|{num_range_regex}(?<={coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('((?.+?){num_range_regex}(?={coil_regex})|{num_range_regex}(?<={coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('((?:.+?){num_range_regex}(?={coil_regex})|{num_range_regex}(?<={coil_regex}))'))
str_extract('polar tube in 5 to 7 turns',
glue('((?:.+?){num_range_regex}(?={coil_regex})|{num_range_regex}(?<={coil_regex}))(?:.+?)'))
str_extract('polar tube in 5 to 7 turns',
glue('({coil_regex}.+?({num_range_regex})|({num_range_regex}).+?{coil_regex})'))
str_extract('polar tube in 5 - 7 turns', '({num_range_regex}) turns')
str_extract('polar tube in 5 - 7 turns', '({num_range_regex}) turns')
num_range_regex
str_extract('polar tube in 5 - 7 turns', glue('({num_range_regex}) turns'))
str_match('polar tube in 5 - 7 turns', glue('({num_range_regex}) turns'))
str_extract('polar tube in 5 to 7 turns',
glue('({coil_regex}.+?({num_range_regex})|({num_range_regex}).+?{coil_regex})'))
str_match('polar tube in 5 to 7 turns',
glue('({coil_regex}.+?({num_range_regex})|({num_range_regex}).+?{coil_regex})'))
?str_detect
str_match('hello hello coil bye bye', '.+(coil).+')
str_match('hello hello coil coil bye bye', '.+(coil).+')
str_match('hello hello coil bye bye', '.+(coil).+')
str_match('polar tube in 5 - 7 turns',
glue('((?<={coil_regex}.+?)({num_range_regex})|({num_range_regex})(?=.+?{coil_regex}))'))
str_match('polar tube in 5 - 7 turns',
glue('((?<={coil_regex}.+?)({num_range_regex})|({num_range_regex})(?={coil_regex}))'))
str_match('polar tube in 5 - 7 turns',
glue('((?<={coil_regex})({num_range_regex})|({num_range_regex})(?=.+?{coil_regex}))'))
microsp_data <- read_csv('../../data/abstracts_traits.csv')
view(microsp_data)
detect_polar_tube <- Vectorize(function(abstract) {
str_detect(abstract, '((\\s*tube\\s*|\\s*tubule\\s*)|\\s*filament\\s*)')
})
detect_polar_tube('Hello polar tube etc')
detect_polar_tube('Hello polar tubule etc')
detect_polar_tube('Hello polar filament etc')
detect_polar_tube('Hello polar fila etc')
microsp_data <- microsp_data %>%
mutate(has_tube_data = detect_polar_tube(abstract))
view(microsp_data)
all(NA)
view(filter(microsp_data, has_tube_data, is.na(`Measured Polar Tubule (μm)`)))
view(filter(microsp_data, has_tube_data, !is.na(`Measured Polar Tubule (μm)`)))
