str_c(
str_c(
sapply(species[1 : length(species) - 1], function(s) {str_c(substr(s, 1, 1), '.')}),
collapse = ' '),
species[length(species)], sep = ' '
)
})
get_abbreviated_species_name('A. punctor')
get_abbreviated_species_name('Aedes punctor')
get_abbreviated_species_name('Aedes pipians punctor')
get_abbreviated_species_name('Aedes pipians peppers punctor')
fixed(get_abbreviated_species_name('Aedes pipians peppers punctor'))
get_hosts_not_in_text <- Vectorize(function(hosts_natural, hosts_experimental, text) {
hosts_natural <- str_split(hosts_natural, '; ')[[1]]
hosts_experimental <- str_split(hosts_experimental, '; ')[[1]]
not_in_text <- str_c(
c(
hosts_natural[which(!str_detect(tolower(text), tolower(fixed(hosts_natural))))],
hosts_experimental[which(!str_detect(tolower(text), tolower(fixed(hosts_experimental))))]
),
collapse = '; ', sep = '; '
)
if (not_in_text == '') {
return(NA)
}
# check if any abbreviations of species names actually do appear in text,
# and don't count those cases as missing in text
not_in_text <-
not_in_text[!str_detect(tolower(txt),
tolower(fixed(get_abbreviated_species_name(not_in_text))))]
return(not_in_text)
}, vectorize.args = c('hosts_natural', 'hosts_experimental', 'text'))
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
hosts_not_in_text = get_hosts_not_in_text(hosts_natural,
hosts_experimental,
title_abstract),
hosts_not_in_text_corrected = NA)
get_hosts_not_in_text <- Vectorize(function(hosts_natural, hosts_experimental, text) {
hosts_natural <- str_split(hosts_natural, '; ')[[1]]
hosts_experimental <- str_split(hosts_experimental, '; ')[[1]]
not_in_text <- str_c(
c(
hosts_natural[which(!str_detect(tolower(text), tolower(fixed(hosts_natural))))],
hosts_experimental[which(!str_detect(tolower(text), tolower(fixed(hosts_experimental))))]
),
collapse = '; ', sep = '; '
)
if (not_in_text == '') {
return(NA)
}
# check if any abbreviations of species names actually do appear in text,
# and don't count those cases as missing in text
not_in_text <-
not_in_text[!str_detect(tolower(text),
tolower(fixed(get_abbreviated_species_name(not_in_text))))]
return(not_in_text)
}, vectorize.args = c('hosts_natural', 'hosts_experimental', 'text'))
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
hosts_not_in_text = get_hosts_not_in_text(hosts_natural,
hosts_experimental,
title_abstract),
hosts_not_in_text_corrected = NA)
view(to_manually_correct)
view(to_manually_correct)\
get_abbreviated_species_name <- function(species) {
species <- str_split(species, ' ')[[1]]
# ugly string concat operation
str_c(
str_c(
sapply(species[1 : length(species) - 1], function(s) {str_c(substr(s, 1, 1), '.')}),
collapse = ' '),
species[length(species)], sep = ' '
)
}
get_hosts_not_in_text <- function(hosts_natural, hosts_experimental, text) {
hosts_natural <- str_split(hosts_natural, '; ')[[1]]
hosts_experimental <- str_split(hosts_experimental, '; ')[[1]]
not_in_text <- str_c(
c(
hosts_natural[which(!str_detect(tolower(text), tolower(fixed(hosts_natural))))],
hosts_experimental[which(!str_detect(tolower(text), tolower(fixed(hosts_experimental))))]
),
collapse = '; ', sep = '; '
)
if (not_in_text == '') {
return(NA)
}
# check if any abbreviations of species names actually do appear in text,
# and don't count those cases as missing in text
not_in_text <-
not_in_text[!str_detect(tolower(text),
tolower(fixed(get_abbreviated_species_name(not_in_text))))]
return(not_in_text)
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_hosts_not_in_text(hosts_natural,
hosts_experimental,
title_abstract),
hosts_not_in_text_corrected = NA)
view(microsp_df)
get_hosts_not_in_text <- function(hosts_natural, hosts_experimental, text) {
hosts_natural <- str_split(hosts_natural, '; ')[[1]]
hosts_experimental <- str_split(hosts_experimental, '; ')[[1]]
not_in_text <- str_c(
c(
hosts_natural[which(!str_detect(tolower(text), tolower(fixed(hosts_natural))))],
hosts_experimental[which(!str_detect(tolower(text), tolower(fixed(hosts_experimental))))]
),
collapse = '; ', sep = '; '
)
if (not_in_text == '' | is.na(not_in_text)) {
return(NA)
}
# check if any abbreviations of species names actually do appear in text,
# and don't count those cases as missing in text
not_in_text <-
not_in_text[!str_detect(tolower(text),
tolower(fixed(get_abbreviated_species_name(not_in_text))))]
return(not_in_text)
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_hosts_not_in_text(hosts_natural,
hosts_experimental,
title_abstract),
hosts_not_in_text_corrected = NA)
str_c('hello; there', 'friendos', sep = '; ')
combine_all_hosts <- Vectorize(function(hosts_natural, hosts_experimental) {
return(str_c(hosts_natural, hosts_experimental, sep = '; '))
}, vectorize.args = c('hosts_natural', 'hosts_experimental'))
species <- 'Aedes punctor; Culex pipiens'
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species
length(species)
class(species)
## Helper functions
clean_species_names <- Vectorize(function(hosts) {
hosts <- str_remove(str_split(hosts, '; ')[[1]], ' ?\\(.+\\)')
return(str_c(hosts, collapse = '; '))
})
combine_all_hosts <- Vectorize(function(hosts_natural, hosts_experimental) {
return(str_c(hosts_natural, hosts_experimental, sep = '; '))
}, vectorize.args = c('hosts_natural', 'hosts_experimental'))
get_abbreviated_species_name <- function(species) {
species <- str_split(species, ' ')[[1]]
# ugly string concat operation
str_c(
str_c(
sapply(species[1 : length(species) - 1], function(s) {str_c(substr(s, 1, 1), '.')}),
collapse = ' '),
species[length(species)], sep = ' '
)
}
get_species_not_in_text <- function(species, txt) {
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(text), tolower(fixed(sp))) &
!str_detect(tolower(text), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental))
view(to_manually_correct)
combine_all_hosts <- Vectorize(function(hosts_natural, hosts_experimental) {
if (is.na(hosts_natural) & is.na(hosts_experimental)) {
return(NA)
} else if (is.na(hosts_natural)) {
return(hosts_experimental)
} else if (is.na(hosts_experimental)) {
return(hosts_natural)
}
return(str_c(hosts_natural, hosts_experimental, sep = '; '))
}, vectorize.args = c('hosts_natural', 'hosts_experimental'))
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental))
view(to_manually_correct)
get_species_not_in_text <- function(species, txt) {
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(text), tolower(fixed(sp))) &
!str_detect(tolower(text), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
get_species_not_in_text('Aedes punctor', 'The mosquito, Aedes punctor, was infected by microsporidia')
species = 'Aedes punctor'
txt = 'The mosquito, Aedes punctor, was infected by microsporidia'
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
species
for (sp in species) {
if (!str_detect(tolower(text), tolower(fixed(sp))) &
!str_detect(tolower(text), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
str_detect(tolower(text), tolower(fixed(species)))
?str_detect
str_detect(tolower(txt), tolower(fixed(species)))
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
length(species_not_in_text) == 0
txt = 'The mosquito, A. punctor, was infected by microsporidia'
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
txt = 'The mosquito, A. penis, was infected by microsporidia'
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
species <- 'Aedes punctor; Culex pipiens; Rotiferus rotifer'
txt = 'The mosquito, C. pipiens and Aedes punctor was infected by microsporidia. Rotiferus rotifer, however, was not.'
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
species
txt
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
txt = 'The mosquito, C. pipiens and Aedes punctor was infected by microsporidia.'
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
txt = 'R. rotiferus was infected by microsporidia.'
txt = 'R. rotifer was infected by microsporidia.'
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
get_species_not_in_text <- function(species, txt) {
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
get_species_not_in_text(species, txt)
get_species_not_in_text(species, txt)
species
txt
get_species_not_in_text(species, txt)
species
species <- 'Aedes punctor; Culex pipiens; Rotiferus rotifer'
species
get_species_not_in_text <- function(species, txt) {
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
get_species_not_in_text(species, txt)
get_species_not_in_text('Rotiferus rotifer', txt)
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract))
get_species_not_in_text <- function(species, txt) {
if (is.na(txt)) {
return(NA)
}
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
get_species_not_in_text('Aedes punctor (=A. peensi)', 'The mosquito, A. punctor, was infected')
get_species_not_in_text('Aedes punctor (=A. peensi)', 'The mosquito, A. pun, was infected')
get_species_not_in_text <- function(species, txt) {
if (is.na(txt)) {
return(NA)
}
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract))
species_not_in_text <- c()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
species_not_in_text
character()
get_species_not_in_text <- function(species, txt) {
if (is.na(txt)) {
return(NA)
}
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- character()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract))
microsp_df[466,]
view(microsp_df)
view(microsp_df[466,])
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental))
view(to_manually_correct[466,])
get_species_not_in_text <- function(species, txt) {
if (is.na(txt) | is.na(species)) {
return(NA)
}
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- character()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
get_species_not_in_text <- function(species, txt) {
if (is.na(txt) | is.na(species)) {
return(NA)
}
species <- sapply(str_split(species, '; ')[[1]], function(s) {clean_species_names(s)})
species_not_in_text <- character()
for (sp in species) {
if (!str_detect(tolower(txt), tolower(fixed(sp))) &
!str_detect(tolower(txt), tolower(fixed(get_abbreviated_species_name(sp))))) {
species_not_in_text <- c(species_not_in_text, sp)
}
}
if (length(species_not_in_text) == 0) {
return(NA)
}
return(str_c(species_not_in_text, collapse = '; '))
}
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract))
view(to_manually_correct)
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract)) %>%
filter(!is.na(hosts_not_in_text) | !is.na(microsp_not_in_text))
view(to_manually_correct)
source("~/Desktop/microsporidia_nlp/src/1_format_data/4_clean_recorded_host_data.R", echo=TRUE)
clean_species_names <- Vectorize(function(hosts) {
hosts <- str_remove(str_split(hosts, '; ')[[1]], ' ?\\(.+\\)')
return(str_c(str_remove(hosts, '\\d+$'), collapse = '; '))
})
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract)) %>%
filter(!is.na(hosts_not_in_text) | !is.na(microsp_not_in_text))
microsp_df <- read_csv('../../data/manually_format_multi_species_papers.csv')
to_manually_correct <- microsp_df %>%
select(species, paper_title, title_abstract, hosts_natural, hosts_experimental) %>%
mutate(hosts_natural = clean_species_names(hosts_natural),
hosts_experimental = clean_species_names(hosts_experimental),
all_hosts = combine_all_hosts(hosts_natural, hosts_experimental)) %>%
rowwise() %>%
mutate(hosts_not_in_text = get_species_not_in_text(all_hosts, title_abstract),
microsp_not_in_text = get_species_not_in_text(species, title_abstract)) %>%
filter(!is.na(hosts_not_in_text) | !is.na(microsp_not_in_text))
x = read_csv('../../data/manually_correct_recorded_hosts.csv')
x <- filter(x, species %in% to_manually_correct$species)
write_csv(x, '../../data/manually_correct_recorded_hosts.csv')
